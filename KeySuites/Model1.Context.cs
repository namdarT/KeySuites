//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vidly
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class simplicityEntities : DbContext
    {
        public simplicityEntities()
            : base("name=simplicityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<asset> assets { get; set; }
        public virtual DbSet<asset_alert> asset_alert { get; set; }
        public virtual DbSet<asset_attribute_data> asset_attribute_data { get; set; }
        public virtual DbSet<asset_device_attribute_data> asset_device_attribute_data { get; set; }
        public virtual DbSet<code_domain> code_domain { get; set; }
        public virtual DbSet<code_domain_value> code_domain_value { get; set; }
        public virtual DbSet<device_attribute_data> device_attribute_data { get; set; }
        public virtual DbSet<manufacturer> manufacturers { get; set; }
        public virtual DbSet<party> parties { get; set; }
        public virtual DbSet<party_asset> party_asset { get; set; }
        public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public virtual DbSet<AspNetRoleClaim> AspNetRoleClaims { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUserToken> AspNetUserTokens { get; set; }
        public virtual DbSet<asset_alert_condition> asset_alert_condition { get; set; }
        public virtual DbSet<asset_data_dashboard> asset_data_dashboard { get; set; }
        public virtual DbSet<asset_data_dashboard_bak> asset_data_dashboard_bak { get; set; }
        public virtual DbSet<asset_data_detail> asset_data_detail { get; set; }
        public virtual DbSet<asset_data_detail_bak> asset_data_detail_bak { get; set; }
        public virtual DbSet<asset_data_rpt_tag_key> asset_data_rpt_tag_key { get; set; }
        public virtual DbSet<asset_device_json_data> asset_device_json_data { get; set; }
        public virtual DbSet<asset_json_data> asset_json_data { get; set; }
        public virtual DbSet<asset_status> asset_status { get; set; }
        public virtual DbSet<party_contact> party_contact { get; set; }
        public virtual DbSet<party_contact_asset> party_contact_asset { get; set; }
        public virtual DbSet<vw___EFMigrationsHistory> vw___EFMigrationsHistory { get; set; }
        public virtual DbSet<vw_app_user_asset> vw_app_user_asset { get; set; }
        public virtual DbSet<vw_app_user_asset_alert_condition> vw_app_user_asset_alert_condition { get; set; }
        public virtual DbSet<vw_app_user_party> vw_app_user_party { get; set; }
        public virtual DbSet<vw_AspNetRoleClaims> vw_AspNetRoleClaims { get; set; }
        public virtual DbSet<vw_AspNetRoles> vw_AspNetRoles { get; set; }
        public virtual DbSet<vw_AspNetUserClaims> vw_AspNetUserClaims { get; set; }
        public virtual DbSet<vw_AspNetUserLogins> vw_AspNetUserLogins { get; set; }
        public virtual DbSet<vw_AspNetUserRoles> vw_AspNetUserRoles { get; set; }
        public virtual DbSet<vw_AspNetUsers> vw_AspNetUsers { get; set; }
        public virtual DbSet<vw_AspNetUserTokens> vw_AspNetUserTokens { get; set; }
        public virtual DbSet<vw_asset> vw_asset { get; set; }
        public virtual DbSet<vw_asset_alert> vw_asset_alert { get; set; }
        public virtual DbSet<vw_asset_alert_condition> vw_asset_alert_condition { get; set; }
        public virtual DbSet<vw_asset_alert_data_tag> vw_asset_alert_data_tag { get; set; }
        public virtual DbSet<vw_asset_data_dashboard> vw_asset_data_dashboard { get; set; }
        public virtual DbSet<vw_asset_data_dashboard_bak> vw_asset_data_dashboard_bak { get; set; }
        public virtual DbSet<vw_asset_data_detail> vw_asset_data_detail { get; set; }
        public virtual DbSet<vw_asset_data_detail_bak> vw_asset_data_detail_bak { get; set; }
        public virtual DbSet<vw_asset_data_rpt_tag_key> vw_asset_data_rpt_tag_key { get; set; }
        public virtual DbSet<vw_asset_json_data> vw_asset_json_data { get; set; }
        public virtual DbSet<vw_asset_status> vw_asset_status { get; set; }
        public virtual DbSet<vw_code_domain> vw_code_domain { get; set; }
        public virtual DbSet<vw_code_domain_value> vw_code_domain_value { get; set; }
        public virtual DbSet<vw_flat_asset_alert_condition> vw_flat_asset_alert_condition { get; set; }
        public virtual DbSet<vw_flat_asset_data_detail> vw_flat_asset_data_detail { get; set; }
        public virtual DbSet<vw_latest_asset_json_data> vw_latest_asset_json_data { get; set; }
        public virtual DbSet<vw_lu_account_status_cd> vw_lu_account_status_cd { get; set; }
        public virtual DbSet<vw_lu_alert_color_cd> vw_lu_alert_color_cd { get; set; }
        public virtual DbSet<vw_lu_alert_level_cd> vw_lu_alert_level_cd { get; set; }
        public virtual DbSet<vw_lu_asset_type_cd> vw_lu_asset_type_cd { get; set; }
        public virtual DbSet<vw_lu_condition_cd> vw_lu_condition_cd { get; set; }
        public virtual DbSet<vw_lu_country_cd> vw_lu_country_cd { get; set; }
        public virtual DbSet<vw_lu_data_type_cd> vw_lu_data_type_cd { get; set; }
        public virtual DbSet<vw_lu_entity_type_cd> vw_lu_entity_type_cd { get; set; }
        public virtual DbSet<vw_lu_installation_type_cd> vw_lu_installation_type_cd { get; set; }
        public virtual DbSet<vw_lu_party_contact_type_cd> vw_lu_party_contact_type_cd { get; set; }
        public virtual DbSet<vw_lu_party_type_cd> vw_lu_party_type_cd { get; set; }
        public virtual DbSet<vw_lu_sensor_data_key_cd> vw_lu_sensor_data_key_cd { get; set; }
        public virtual DbSet<vw_lu_sensor_data_subkey_cd> vw_lu_sensor_data_subkey_cd { get; set; }
        public virtual DbSet<vw_lu_sensor_data_tag_cd> vw_lu_sensor_data_tag_cd { get; set; }
        public virtual DbSet<vw_lu_state_cd> vw_lu_state_cd { get; set; }
        public virtual DbSet<vw_manufacturer> vw_manufacturer { get; set; }
        public virtual DbSet<vw_party> vw_party { get; set; }
        public virtual DbSet<vw_party_asset> vw_party_asset { get; set; }
        public virtual DbSet<vw_party_contact> vw_party_contact { get; set; }
        public virtual DbSet<vw_party_contact_asset> vw_party_contact_asset { get; set; }
        public virtual DbSet<vw_rpt_asset_data_dash_detail> vw_rpt_asset_data_dash_detail { get; set; }
        public virtual DbSet<vw_rpt_asset_data_dash_summary> vw_rpt_asset_data_dash_summary { get; set; }
    
        [DbFunction("simplicityEntities", "STRING_SPLIT")]
        public virtual IQueryable<STRING_SPLIT_Result> STRING_SPLIT(string @string, string separator)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var separatorParameter = separator != null ?
                new ObjectParameter("separator", separator) :
                new ObjectParameter("separator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<STRING_SPLIT_Result>("[simplicityEntities].[STRING_SPLIT](@string, @separator)", stringParameter, separatorParameter);
        }
    
        [DbFunction("simplicityEntities", "STRING_SPLIT_J")]
        public virtual IQueryable<STRING_SPLIT_J_Result> STRING_SPLIT_J(string @string, string separator)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var separatorParameter = separator != null ?
                new ObjectParameter("separator", separator) :
                new ObjectParameter("separator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<STRING_SPLIT_J_Result>("[simplicityEntities].[STRING_SPLIT_J](@string, @separator)", stringParameter, separatorParameter);
        }
    
        public virtual int generate_alert_condition(Nullable<decimal> asset_id)
        {
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("generate_alert_condition", asset_idParameter);
        }
    
        public virtual int generate_asset_alerts(Nullable<decimal> assetId_, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("generate_asset_alerts", assetId_Parameter, debug_Parameter);
        }
    
        public virtual int generate_asset_device_alerts(Nullable<decimal> assetId_, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("generate_asset_device_alerts", assetId_Parameter, debug_Parameter);
        }
    
        public virtual int ins_asset_attribute_data(Nullable<decimal> jsonDataId_, Nullable<bool> debug_)
        {
            var jsonDataId_Parameter = jsonDataId_.HasValue ?
                new ObjectParameter("jsonDataId_", jsonDataId_) :
                new ObjectParameter("jsonDataId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_asset_attribute_data", jsonDataId_Parameter, debug_Parameter);
        }
    
        public virtual int ins_asset_data_detail(Nullable<decimal> jsonDataId_, Nullable<bool> debug_)
        {
            var jsonDataId_Parameter = jsonDataId_.HasValue ?
                new ObjectParameter("jsonDataId_", jsonDataId_) :
                new ObjectParameter("jsonDataId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_asset_data_detail", jsonDataId_Parameter, debug_Parameter);
        }
    
        public virtual int ins_asset_device_attribute_data(Nullable<decimal> jsonDataId_, Nullable<bool> debug_)
        {
            var jsonDataId_Parameter = jsonDataId_.HasValue ?
                new ObjectParameter("jsonDataId_", jsonDataId_) :
                new ObjectParameter("jsonDataId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_asset_device_attribute_data", jsonDataId_Parameter, debug_Parameter);
        }
    
        public virtual int ins_asset_device_json_data(Nullable<decimal> assetId_, string jsonStr_, string jsonDeviceStr_, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var jsonStr_Parameter = jsonStr_ != null ?
                new ObjectParameter("jsonStr_", jsonStr_) :
                new ObjectParameter("jsonStr_", typeof(string));
    
            var jsonDeviceStr_Parameter = jsonDeviceStr_ != null ?
                new ObjectParameter("jsonDeviceStr_", jsonDeviceStr_) :
                new ObjectParameter("jsonDeviceStr_", typeof(string));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_asset_device_json_data", assetId_Parameter, jsonStr_Parameter, jsonDeviceStr_Parameter, debug_Parameter);
        }
    
        public virtual int ins_asset_json_data(Nullable<decimal> assetId_, string jsonStr_, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var jsonStr_Parameter = jsonStr_ != null ?
                new ObjectParameter("jsonStr_", jsonStr_) :
                new ObjectParameter("jsonStr_", typeof(string));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_asset_json_data", assetId_Parameter, jsonStr_Parameter, debug_Parameter);
        }
    
        public virtual ObjectResult<string> json_Split(string json_)
        {
            var json_Parameter = json_ != null ?
                new ObjectParameter("json_", json_) :
                new ObjectParameter("json_", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("json_Split", json_Parameter);
        }
    
        public virtual int rpt_asset_data_dash(Nullable<decimal> assetId_, Nullable<bool> isSummaryInd, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var isSummaryIndParameter = isSummaryInd.HasValue ?
                new ObjectParameter("isSummaryInd", isSummaryInd) :
                new ObjectParameter("isSummaryInd", typeof(bool));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_asset_data_dash", assetId_Parameter, isSummaryIndParameter, debug_Parameter);
        }
    
        public virtual int rpt_asset_data_dash_insert(Nullable<decimal> assetId_, Nullable<decimal> assetJsonId_, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var assetJsonId_Parameter = assetJsonId_.HasValue ?
                new ObjectParameter("assetJsonId_", assetJsonId_) :
                new ObjectParameter("assetJsonId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_asset_data_dash_insert", assetId_Parameter, assetJsonId_Parameter, debug_Parameter);
        }
    
        public virtual int rpt_asset_data_pivot(Nullable<decimal> assetId_, Nullable<decimal> assetJsonId_, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var assetJsonId_Parameter = assetJsonId_.HasValue ?
                new ObjectParameter("assetJsonId_", assetJsonId_) :
                new ObjectParameter("assetJsonId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_asset_data_pivot", assetId_Parameter, assetJsonId_Parameter, debug_Parameter);
        }
    
        public virtual ObjectResult<rpt_asset_device_list_Result> rpt_asset_device_list(Nullable<bool> debug_)
        {
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_asset_device_list_Result>("rpt_asset_device_list", debug_Parameter);
        }
    
        public virtual ObjectResult<rpt_asset_list_Result> rpt_asset_list(Nullable<bool> debug_)
        {
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_asset_list_Result>("rpt_asset_list", debug_Parameter);
        }
    
        public virtual ObjectResult<rpt_sensor_graph_Result> rpt_sensor_graph(Nullable<decimal> assetId_, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_sensor_graph_Result>("rpt_sensor_graph", assetId_Parameter, debug_Parameter);
        }
    
        public virtual int rpt_update_asset_location(Nullable<decimal> assetId_, Nullable<decimal> assetJsonId_, Nullable<bool> debug_)
        {
            var assetId_Parameter = assetId_.HasValue ?
                new ObjectParameter("assetId_", assetId_) :
                new ObjectParameter("assetId_", typeof(decimal));
    
            var assetJsonId_Parameter = assetJsonId_.HasValue ?
                new ObjectParameter("assetJsonId_", assetJsonId_) :
                new ObjectParameter("assetJsonId_", typeof(decimal));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_update_asset_location", assetId_Parameter, assetJsonId_Parameter, debug_Parameter);
        }
    
        public virtual int util_generate_base_lookup_view(Nullable<bool> dropExistingView_, Nullable<bool> createView_, string inputCodeDomain_, Nullable<bool> debug_)
        {
            var dropExistingView_Parameter = dropExistingView_.HasValue ?
                new ObjectParameter("dropExistingView_", dropExistingView_) :
                new ObjectParameter("dropExistingView_", typeof(bool));
    
            var createView_Parameter = createView_.HasValue ?
                new ObjectParameter("createView_", createView_) :
                new ObjectParameter("createView_", typeof(bool));
    
            var inputCodeDomain_Parameter = inputCodeDomain_ != null ?
                new ObjectParameter("inputCodeDomain_", inputCodeDomain_) :
                new ObjectParameter("inputCodeDomain_", typeof(string));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("util_generate_base_lookup_view", dropExistingView_Parameter, createView_Parameter, inputCodeDomain_Parameter, debug_Parameter);
        }
    
        public virtual int util_generate_base_select_view(Nullable<bool> dropExistingView_, Nullable<bool> createView_, string inputTableName_, string createViewFromDb_, Nullable<bool> debug_)
        {
            var dropExistingView_Parameter = dropExistingView_.HasValue ?
                new ObjectParameter("dropExistingView_", dropExistingView_) :
                new ObjectParameter("dropExistingView_", typeof(bool));
    
            var createView_Parameter = createView_.HasValue ?
                new ObjectParameter("createView_", createView_) :
                new ObjectParameter("createView_", typeof(bool));
    
            var inputTableName_Parameter = inputTableName_ != null ?
                new ObjectParameter("inputTableName_", inputTableName_) :
                new ObjectParameter("inputTableName_", typeof(string));
    
            var createViewFromDb_Parameter = createViewFromDb_ != null ?
                new ObjectParameter("createViewFromDb_", createViewFromDb_) :
                new ObjectParameter("createViewFromDb_", typeof(string));
    
            var debug_Parameter = debug_.HasValue ?
                new ObjectParameter("debug_", debug_) :
                new ObjectParameter("debug_", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("util_generate_base_select_view", dropExistingView_Parameter, createView_Parameter, inputTableName_Parameter, createViewFromDb_Parameter, debug_Parameter);
        }
    }
}
